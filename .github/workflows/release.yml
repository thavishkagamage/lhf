name: LHF/pyLHF release

on:
  release:
    branches:
      - master
  push:
    branches:
      - sharedLHF

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        exclude:
          - os: macos-latest
          - os: windows-latest
            ##TODO: Test with windows-latest and msmpi
    
    steps:
    # Get dependencies
    
    - name: Linux Apt update (${{ matrix.os }} , ${{ matrix.mpi }})
      if:   contains(matrix.os,'ubuntu')
      run:  sudo apt-get update
    
    - name: Get Linux OpenMPI dependencies (${{ matrix.os }} , ${{ matrix.mpi }})
      if:   contains(matrix.os,'ubuntu') && contains(matrix.mpi,'openmpi')
      run:  sudo apt-get install -y openmpi-bin openmpi-common libopenmpi-dev cppcheck
      
    - name: Get Linux MPICH dependencies (${{ matrix.os }} , ${{ matrix.mpi }})
      if:   contains(matrix.os,'ubuntu') && contains(matrix.mpi,'mpich')
      run:  sudo apt-get install -y mpich cppcheck
      
    - name: Get dependencies (${{ matrix.os }} , ${{ matrix.mpi }})
      if:   contains(matrix.os,'macos') && contains(matrix.mpi,'openmpi')
      run:  brew install openmpi libomp
      
    - name: Get dependencies (${{ matrix.os }} , ${{ matrix.mpi }})
      if:   contains(matrix.os,'macos') && contains(matrix.mpi,'mpich')
      run:  brew install mpich libomp
               
    - name: Get dependencies (${{ matrix.os }} , ${{ matrix.mpi }})
      if:   contains(matrix.os,'windows-latest') && contains(matrix.mpi,'openmpi')
      run:  wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.2.tar.gz
      
    - name: Windows extract-openmpi 
      if:   contains(matrix.os,'windows-latest') && contains(matrix.mpi,'openmpi')
      run:  tar -xvf ./openmpi-4.0.2.tar.gz
      
    - name: Windows configure-openmpi
      if:   contains(matrix.os,'windows-latest') && contains(matrix.mpi,'openmpi')
      run:  ./openmpi-4.0.2/configure --prefix="/home/${USER}/.openmpi"
      
    - name: Windows install-openmpi
      if:  contains(matrix.os,'windows-latest') && contains(matrix.mpi,'openmpi')
      run: |
          make -j
          sudo make install
          
    
          
    # Checkout v2 : https://github.com/actions/checkout
    - uses: actions/checkout@v2
      
    # Check CMake Version 
    - name: Check CMake (${{ matrix.mpi }})
      run: cmake --version
      
    # Make the project
    - name: cmake
      run: cmake . && make
  
    # Run cmake tests
    - name: ctest
      run: make test
    
    - name: cppcheck
      if:   runner.os == 'Linux'
      run:  cppcheck --enable=all --force .

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy
        
    - name: Build manylinux Python wheels
      if:   runner.os == 'Linux'
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m'
        build-requirements: 'cython numpy'
        system-packages: 'lrzip-devel zlib-devel'
        pre-build-command: ''
        package-path: 'pyLHF'
        pip-wheel-args: '-w ./dist --no-deps'
        
    - name: Publish wheels to PyPI
      if:   runner.os == 'Linux'
      run:  ls pyLHF/



